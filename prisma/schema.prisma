generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_challenges {
  id          String      @id @db.Uuid
  factor_id   String      @db.Uuid
  created_at  DateTime    @db.Timestamptz(6)
  verified_at DateTime?   @db.Timestamptz(6)
  ip_address  String      @db.Inet
  mfa_factors mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_factors {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  friendly_name  String?
  factor_type    factor_type
  status         factor_status
  created_at     DateTime         @db.Timestamptz(6)
  updated_at     DateTime         @db.Timestamptz(6)
  secret         String?
  mfa_challenges mfa_challenges[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  from_ip_address String?       @db.Inet
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?       @db.Uuid
  id                          String        @id @db.Uuid
  aud                         String?       @db.VarChar(255)
  role                        String?       @db.VarChar(255)
  email                       String?       @db.VarChar(255)
  encrypted_password          String?       @db.VarChar(255)
  email_confirmed_at          DateTime?     @db.Timestamptz(6)
  invited_at                  DateTime?     @db.Timestamptz(6)
  confirmation_token          String?       @db.VarChar(255)
  confirmation_sent_at        DateTime?     @db.Timestamptz(6)
  recovery_token              String?       @db.VarChar(255)
  recovery_sent_at            DateTime?     @db.Timestamptz(6)
  email_change_token_new      String?       @db.VarChar(255)
  email_change                String?       @db.VarChar(255)
  email_change_sent_at        DateTime?     @db.Timestamptz(6)
  last_sign_in_at             DateTime?     @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?     @db.Timestamptz(6)
  updated_at                  DateTime?     @db.Timestamptz(6)
  phone                       String?       @unique
  phone_confirmed_at          DateTime?     @db.Timestamptz(6)
  phone_change                String?       @default("")
  phone_change_token          String?       @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?     @db.Timestamptz(6)
  confirmed_at                DateTime?     @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?       @default("") @db.VarChar(255)
  email_change_confirm_status Int?          @default(0) @db.SmallInt
  banned_until                DateTime?     @db.Timestamptz(6)
  reauthentication_token      String?       @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?     @db.Timestamptz(6)
  is_sso_user                 Boolean       @default(false)
  deleted_at                  DateTime?     @db.Timestamptz(6)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  sessions                    sessions[]
  carrinho                    carrinho[]
  endereco                    endereco[]
  pacote                      pacote[]

  @@index([instance_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pacote {
  cdpacote        String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdusuario       String            @db.Uuid
  nmpacote        String?           @db.VarChar(255)
  nmpathname      String?           @db.VarChar
  carrinho_pacote carrinho_pacote[]
  users           users             @relation(fields: [cdusuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pacote_foto     pacote_foto?
  pacote_item     pacote_item[]

  @@schema("public")
}

model pacote_item {
  cdpacoteitem     String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdpacote         String       @db.Uuid
  cdproduto        String       @db.Uuid
  cdsubproduto     String?      @db.Uuid
  cdsubprodutotipo String?      @db.Uuid
  pacote           pacote       @relation(fields: [cdpacote], references: [cdpacote], onDelete: NoAction, onUpdate: NoAction)
  produto          produto      @relation(fields: [cdproduto], references: [cdproduto], onDelete: NoAction, onUpdate: NoAction)
  sub_produto      sub_produto? @relation(fields: [cdsubproduto], references: [cdsubproduto], onDelete: NoAction, onUpdate: NoAction)

  @@unique([cdpacote, cdproduto, cdsubprodutotipo], map: "uq_produto_sub")
  @@schema("public")
}

model pedido {
  cdpedido         String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdusuario        String          @db.Uuid
  cdendereco       String          @db.Uuid
  dtcriado         DateTime        @default(now()) @db.Timestamp(6)
  dtremovido       DateTime?       @db.Timestamp(6)
  dtatualizado     DateTime?       @db.Timestamp(6)
  cdcarrinho       String          @db.Uuid
  sgpedidosituacao String          @db.Char(3)
  carrinho         carrinho        @relation(fields: [cdcarrinho], references: [cdcarrinho], onDelete: NoAction, onUpdate: NoAction, map: "fk_carrinho")
  endereco         endereco        @relation(fields: [cdendereco], references: [cdendereco], onDelete: NoAction, onUpdate: NoAction, map: "fk_endereco")
  pedido_situacao  pedido_situacao @relation(fields: [sgpedidosituacao], references: [sgpedidosituacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_sgpedidosituacao")

  @@schema("public")
}

model pedido_situacao {
  cdpedidosituacao String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nmpedidosituacao String   @db.VarChar(255)
  sgpedidosituacao String   @unique(map: "uq_sg") @db.Char(3)
  pedido           pedido[]

  @@unique([nmpedidosituacao, sgpedidosituacao], map: "uq_pedidosituacao")
  @@schema("public")
}

model produto {
  cdproduto                                        String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdprodutotipo                                    String          @db.Uuid
  nmproduto                                        String          @unique(map: "uq_nmproduto") @db.VarChar(50)
  deproduto                                        String          @db.VarChar
  nmprodutotipo                                    String?         @db.VarChar(255)
  dtatualizado                                     DateTime?       @db.Timestamp(6)
  dtcriado                                         DateTime        @default(now()) @db.Timestamp(6)
  dtremovido                                       DateTime?       @db.Timestamp(6)
  estoque                                          estoque[]
  pacote_item                                      pacote_item[]
  produto_tipo_produto_nmprodutotipoToproduto_tipo produto_tipo?   @relation("produto_nmprodutotipoToproduto_tipo", fields: [nmprodutotipo], references: [nmprodutotipo], onDelete: NoAction, onUpdate: NoAction, map: "fk_nmprodutotipo")
  produto_tipo                                     produto_tipo    @relation(fields: [cdprodutotipo], references: [cdprodutotipo], onDelete: NoAction, onUpdate: NoAction)
  produto_foto                                     produto_foto[]
  produto_preco                                    produto_preco[]
  sub_produto                                      sub_produto[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model produto_foto {
  cdprodutofoto     String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdproduto         String             @db.Uuid
  nmprodutofoto     String?            @db.VarChar(50)
  nmpath            String?            @db.VarChar(255)
  nmmimetype        String?            @db.VarChar(100)
  nmaspect          String?            @db.VarChar(5)
  nmprodutofototipo String?            @db.VarChar(255)
  produto_foto_tipo produto_foto_tipo? @relation(fields: [nmprodutofototipo], references: [nmprodutofototipo], onDelete: NoAction, onUpdate: NoAction, map: "fk_nmprodutofototipo")
  produto           produto            @relation(fields: [cdproduto], references: [cdproduto], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model produto_preco {
  cdprodutopreco String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdproduto      String?   @db.Uuid
  nmproduto      String    @db.VarChar(255)
  vlproduto      Decimal   @default(0.00) @db.Decimal(10, 2)
  dtinicio       DateTime  @default(now()) @db.Timestamp(6)
  dtfim          DateTime? @db.Timestamp(6)
  dtatualizado   DateTime? @db.Timestamp(6)
  dtcriado       DateTime  @default(now()) @db.Timestamp(6)
  dtremovido     DateTime? @db.Timestamp(6)
  flativo        String    @default("S") @db.Char(1)
  produto        produto?  @relation(fields: [cdproduto], references: [cdproduto], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model produto_tipo {
  cdprodutotipo                               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nmprodutotipo                               String    @unique(map: "uq_produto_tipo") @db.VarChar(255)
  deprodutotipo                               String?   @db.VarChar(255)
  produto_produto_nmprodutotipoToproduto_tipo produto[] @relation("produto_nmprodutotipoToproduto_tipo")
  produto                                     produto[]

  @@schema("public")
}

model sub_produto {
  cdsubproduto                                                    String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdproduto                                                       String              @db.Uuid
  cdsubprodutotipo                                                String              @db.Uuid
  nmsubproduto                                                    String?             @db.VarChar(255)
  nmsubprodutotipo                                                String              @db.VarChar(255)
  nmhelpsubproduto                                                String?             @db.VarChar(255)
  dtatualizado                                                    DateTime?           @db.Timestamp(6)
  dtcriado                                                        DateTime            @default(now()) @db.Timestamp(6)
  dtremovido                                                      DateTime?           @db.Timestamp(6)
  pacote_item                                                     pacote_item[]
  sub_produto_tipo_sub_produto_nmsubprodutotipoTosub_produto_tipo sub_produto_tipo    @relation("sub_produto_nmsubprodutotipoTosub_produto_tipo", fields: [nmsubprodutotipo], references: [nmsubprodutotipo], onDelete: NoAction, onUpdate: NoAction, map: "fk_nmsubprodutotipo")
  produto                                                         produto             @relation(fields: [cdproduto], references: [cdproduto], onDelete: NoAction, onUpdate: NoAction)
  sub_produto_tipo_sub_produto_cdsubprodutotipoTosub_produto_tipo sub_produto_tipo    @relation("sub_produto_cdsubprodutotipoTosub_produto_tipo", fields: [cdsubprodutotipo], references: [cdsubprodutotipo], onDelete: NoAction, onUpdate: NoAction)
  sub_produto_foto                                                sub_produto_foto[]
  sub_produto_preco                                               sub_produto_preco[]

  @@unique([cdproduto, cdsubprodutotipo, nmsubproduto], map: "uq_sub_produto_tipo_nm_per_produto")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model sub_produto_foto {
  cdsubprodutofoto     String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdsubproduto         String      @db.Uuid
  nmsubprodutofoto     String?     @db.VarChar(50)
  nmpath               String?     @db.VarChar(255)
  nmmimetype           String?     @db.VarChar(100)
  nmaspect             String?     @db.VarChar(5)
  nmsubprodutofototipo String      @default("BANNER/AVATAR") @db.VarChar(255)
  sub_produto          sub_produto @relation(fields: [cdsubproduto], references: [cdsubproduto], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model sub_produto_foto_tipo {
  cdsubprodutofototipo String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nmsubprodutofototipo String  @unique(map: "uq_sub_produto_foto_tipo") @db.VarChar(255)
  desubprodutofototipo String? @db.VarChar(255)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model sub_produto_preco {
  cdsubprodutopreco String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdsubproduto      String      @db.Uuid
  nmsubproduto      String      @db.VarChar(255)
  vlsubproduto      Decimal     @default(0.00) @db.Decimal(10, 2)
  dtinicio          DateTime    @default(now()) @db.Timestamp(6)
  dtfim             DateTime?   @db.Timestamp(6)
  dtatualizado      DateTime?   @db.Timestamp(6)
  dtcriado          DateTime    @default(now()) @db.Timestamp(6)
  dtremovido        DateTime?   @db.Timestamp(6)
  flativo           String      @default("S") @db.Char(1)
  sub_produto       sub_produto @relation(fields: [cdsubproduto], references: [cdsubproduto], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model sub_produto_tipo {
  cdsubprodutotipo                                           String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nmsubprodutotipo                                           String?       @unique(map: "uq_sub_produto_tipo") @db.VarChar(255)
  desubprodutotipo                                           String?       @db.VarChar(255)
  sub_produto_sub_produto_nmsubprodutotipoTosub_produto_tipo sub_produto[] @relation("sub_produto_nmsubprodutotipoTosub_produto_tipo")
  sub_produto_sub_produto_cdsubprodutotipoTosub_produto_tipo sub_produto[] @relation("sub_produto_cdsubprodutotipoTosub_produto_tipo")

  @@schema("public")
}

model carrinho {
  cdcarrinho         String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdusuario          String            @db.Uuid
  dtcriado           DateTime          @default(now()) @db.Timestamp(6)
  dtatualizado       DateTime?         @db.Timestamp(6)
  dtremovido         DateTime?         @db.Timestamp(6)
  sgcarrinhosituacao String            @default("PEN") @db.Char(3)
  carrinho_situacao  carrinho_situacao @relation(fields: [sgcarrinhosituacao], references: [sgcarrinhosituacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_carrinhosituacao")
  users              users             @relation(fields: [cdusuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario")
  carrinho_pacote    carrinho_pacote[]
  pedido             pedido[]

  @@schema("public")
}

model carrinho_pacote {
  cdcarrinhopacote String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdcarrinho       String   @db.Uuid
  cdpacote         String   @db.Uuid
  nuqtdpacote      Int      @default(1)
  carrinho         carrinho @relation(fields: [cdcarrinho], references: [cdcarrinho], onDelete: NoAction, onUpdate: NoAction)
  pacote           pacote   @relation(fields: [cdpacote], references: [cdpacote], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model carrinho_situacao {
  cdcarrinhosituacao String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nmcarrinhosituacao String     @db.VarChar(255)
  sgcarrinhosituacao String     @unique(map: "uq_sgcarrinhosituacao") @db.Char(3)
  carrinho           carrinho[]

  @@unique([nmcarrinhosituacao, sgcarrinhosituacao], map: "uq_carrinhosituacao")
  @@schema("public")
}

model endereco {
  cdendereco    String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdusuario     String   @db.Uuid
  nmendereco    String   @db.VarChar(100)
  nuendereco    Int?
  nmestado      String   @db.VarChar(50)
  nmcidade      String   @db.VarChar(100)
  nucep         String   @db.VarChar(9)
  nutelefone    String   @db.VarChar(15)
  deobservacoes String?  @db.VarChar(150)
  dtnascimento  DateTime @db.Date
  nmresponsavel String   @db.VarChar
  nmemail       String   @db.VarChar
  nmcomplemento String   @db.VarChar
  nmuf          String?  @db.VarChar(2)
  flpadrao      String   @default("N") @db.VarChar(1)
  users         users    @relation(fields: [cdusuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pedido        pedido[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model pacote_foto {
  cdpacotefoto String  @id(map: "pk_pacotefoto") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdpacote     String  @unique(map: "uq_cdpacote") @db.Uuid
  nmpacotefoto String? @db.VarChar(50)
  nmpath       String? @db.VarChar(255)
  nmmimetype   String? @db.VarChar(100)
  nmaspect     String? @db.VarChar(5)
  pacote       pacote  @relation(fields: [cdpacote], references: [cdpacote], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model estoque {
  cdestoque    String    @id(map: "estoqueproduto_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cdproduto    String    @db.Uuid
  nuestoque    Int       @default(0)
  dtcriado     DateTime  @default(now()) @db.Timestamp(6)
  dtatualizado DateTime? @db.Timestamp(6)
  produto      produto   @relation(fields: [cdproduto], references: [cdproduto], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model produto_foto_tipo {
  cdprodutofototipo String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nmprodutofototipo String         @unique(map: "uq_produto_foto_tipo") @db.VarChar(255)
  deprodutofototipo String?        @db.VarChar(255)
  produto_foto      produto_foto[]

  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn

  @@schema("auth")
}
